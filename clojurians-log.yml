---
- name: Install prerequisites for the Clojurians Log app
  vars_files:
    - vars/clojurians_log_secrets.yml
  hosts: clojurians_log
  become: true
  vars:
    database_name: "clojurians_log_datomic"
    database_user: "clojurians_log"
    database_hostname: "localhost"
    database_port: 5432
    clojurians_app_http_port: 4242
    datomic_pro_version: 0.9.5561.56
    datomic_object_cache_max: 2g
    clojure_app_env_vars: |
      JVM_OPTS="-Dclojure.server.myrepl={:port,50505,:accept,clojure.core.server/repl} -Ddatomic.ObjectCacheMax=7g -Ddatomic.memcachedServers=127.0.0.1:11211"
    fail2ban_services:
      - name: ssh
        enabled: true
        port: ssh
        filter: sshd
        logpath: /var/log/auth.log
        maxretry: 3
        protocol: tcp
  roles:
    - role: plexus.system-defaults

    - role: jnv.unattended-upgrades

    - role: ANXS.postgresql
      tags: postgresql
      postgresql_databases:
        - name: "{{database_name}}"
      postgresql_users:
        - name: "{{database_user}}"
          pass: "{{database_password}}"
          encrypted: no
      postgresql_user_privileges:
        - name: "{{database_user}}"
          db: "{{database_name}}"
          priv: "ALL"

    #- role: ANXS.fail2ban
    #  tags: fail2ban

    - role: ansiblebit.oracle-java
      oracle_java_set_as_default: yes

    - role: geerlingguy.memcached
      tags: memcached
      memcached_memory_limit: 4096

    - role: plexus.datomic-pro
      tags: datomic
      datomic_memcached: 127.0.0.1:11211

    - role: plexus.clojure-web-app
      clojure_app_authorized_keys: |
        ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCf99gah0qnmLQn3yix8NFk2JsV0kHTzciLLHVUFfJmCsb4sHY4yKAuiMfp9E0s71tIsmVfw9GdNfhit/nHqQG/VGjgYSR4zIRD0Rr0V5GrDsSS/jWotNfb0JXt+Up310BE/diL7vi8uTwe3t5THymiuibFLgoaHvnbFE1VYojpyiGcSOGmE9GrDOuN08mg2ynb6FAK2/tnfo+ZBwl7g3A9pMvjHUwRzFyq+Z+Mdmf8c8x4qLrikUNv/U3TL1WPXUB4rwiUwhnRqadR/uBGYUwWJ1vfh4wl1aZqnyVRM3YfDmb5720m2IXX1MPH0CDio8moT9bwIfSRyBUt3zDuft/R arne@twoflower

      clojure_app_main_command: "/usr/local/bin/lein with-profile +production,-dev run {{ clojure_app_home_dir }}/config.edn"
      clojure_app_health_check_url: "http://localhost:{{clojurians_app_http_port}}/healthcheck"

      tags: clojure-web-app
      clojure_app_service_start_after: datomic.service

    - role: plexus.clojurians-log
      tags: clojurians-log

    - role: jdauphant.nginx
      tags: nginx
      nginx_sites:
        default:
          - listen 80
          - server_name localhost
          - |
            location / {
                root {{ clojure_app_app_dir }}/resources/public;
                try_files $uri @proxy_app;
                expires max;
                access_log off;
                if ($request_filename ~ "^.*/(.+\.(zip|tgz|iso|gz|vcf))$"){
                    set $fname $1;
                    add_header Content-Disposition 'attachment; filename="$fname"';
                }
            }
          - |
            location @proxy_app {
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                # Fix the “It appears that your reverse proxy set up is broken" error.
                proxy_pass http://localhost:{{ clojurians_app_http_port }};
                proxy_read_timeout 90;
                proxy_redirect http://localhost:{{ clojurians_app_http_port }} https://clojurians-log.clojureverse.org;
            }

    - role: thefinn93.letsencrypt
      letsencrypt_webroot_path: "{{ clojure_app_app_dir }}/resources/public"
      letsencrypt_email: arne@arnebrasseur.net
      letsencrypt_cert_domains:
       - clojurians-log.clojureverse.org
      letsencrypt_renewal_command_args: '--renew-hook "systemctl restart nginx"'
      tags: letsencrypt

    - role: jdauphant.nginx
      tags: nginx
      nginx_sites:
        default:
          - listen 80
          - return 301 https://$host$request_uri
        https:
          - listen 443
          - server_name localhost
          - ssl_certificate      /etc/letsencrypt/live/clojurians-log-staging.clojureverse.org/fullchain.pem
          - ssl_certificate_key  /etc/letsencrypt/live/clojurians-log-staging.clojureverse.org/privkey.pem
          - ssl on
          - ssl_prefer_server_ciphers  on
          - ssl_session_timeout 180m
          - ssl_session_cache builtin:1000  shared:SSL:10m
          - ssl_protocols TLSv1 TLSv1.1 TLSv1.2
          - ssl_ciphers 'AES256+EECDH:AES256+EDH'
          - ssl_dhparam /etc/ssl/certs/dhparam.pem
          - add_header Strict-Transport-Security 'max-age=31536000'
          - |
            location / {
                root {{ clojure_app_app_dir }}/resources/public;
                try_files $uri @proxy_app;
                expires max;
                access_log off;
                if ($request_filename ~ "^.*/(.+\.(zip|tgz|iso|gz|vcf))$"){
                    set $fname $1;
                    add_header Content-Disposition 'attachment; filename="$fname"';
                }
            }
          - |
            location @proxy_app {
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                # Fix the “It appears that your reverse proxy set up is broken" error.
                proxy_pass http://localhost:{{ clojurians_app_http_port }};
                proxy_read_timeout 90;
                proxy_redirect http://localhost:{{ clojurians_app_http_port }} https://clojurians-log.clojureverse.org;
            }

    - role: plexus.rtmbot
