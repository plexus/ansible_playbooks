#!/usr/bin/env ruby

require 'open3'

# 1. Read STDIN (Format: "from_commit to_commit branch_name")
from, to, branch = ARGF.read.split(" ")

# Only deploy if master branch was pushed
if branch !~ /master$/
    puts "Received branch #{branch}, not deploying."
    exit 1
end

def try_exec!(*args)
  puts "===> #{args.join(' ')}"
  Open3.popen3(*args) do |_, stdout, stderr, thread|
    {:out => stdout, :err => stderr}.each do |key, stream|
      Thread.new do
        until (raw_line = stream.gets).nil? do
          puts raw_line.split("\n").map {|l| "*#{key.to_s}* | #{l}" }.join
        end
      end
    end

    unless thread.value.success?
      puts "**** Command failed: #{args.join(' ')}"
      exit thread.value.exitstatus
    end
  end
end

try_exec!("git", "--work-tree={{ clojure_app_app_dir }}", "checkout", "--force", "master")

PREP_CMD = "{{ clojure_app_prep_command }}"

unless PREP_CMD.empty?
  try_exec!("/bin/sh", "-c", "cd {{ clojure_app_app_dir }}; #{PREP_CMD}")
end

try_exec!("sudo", "/bin/systemctl", "restart", "{{ clojure_app_name }}")
try_exec!("sudo", "/bin/systemctl", "status", "{{ clojure_app_name }}")
